{"message":"failed to resolve: could not find `lex_morpho_ast` in `models`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\ctls\\lang\\lex_morpho_ctl.rs","byte_start":119,"byte_end":133,"line_start":7,"line_end":7,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    use crate::models::lex_morpho_ast::lexicon::{Crits, Gloss, Lexer};","highlight_start":24,"highlight_end":38}],"label":"could not find `lex_morpho_ast` in `models`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `lex_morpho_ast` in `models`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ctls\\lang\\lex_morpho_ctl.rs:7:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::models::lex_morpho_ast::lexicon::{Crits, Gloss, Lexer};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `lex_morpho_ast` in `models`\u001b[0m\n\n"}
{"message":"unused import: `lindera::error::LinderaError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":97,"byte_end":125,"line_start":5,"line_end":5,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"    use lindera::error::LinderaError;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":93,"byte_end":126,"line_start":5,"line_end":5,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"    use lindera::error::LinderaError;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `lindera::error::LinderaError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:5:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use lindera::error::LinderaError;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `DictionaryConfig`, `DictionaryKind`, `TokenizerConfig`, `UserDictionaryConfig`, `mode::Mode`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":156,"byte_end":166,"line_start":7,"line_end":7,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        mode::Mode,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":189,"byte_end":205,"line_start":8,"line_end":8,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},","highlight_start":21,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":218,"byte_end":233,"line_start":8,"line_end":8,"column_start":50,"column_end":65,"is_primary":true,"text":[{"text":"        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},","highlight_start":50,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":235,"byte_end":255,"line_start":8,"line_end":8,"column_start":67,"column_end":87,"is_primary":true,"text":[{"text":"        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},","highlight_start":67,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":267,"byte_end":281,"line_start":9,"line_end":9,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        DictionaryKind,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":156,"byte_end":177,"line_start":7,"line_end":8,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        mode::Mode,","highlight_start":9,"highlight_end":20},{"text":"        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},","highlight_start":1,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":189,"byte_end":207,"line_start":8,"line_end":8,"column_start":21,"column_end":39,"is_primary":true,"text":[{"text":"        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},","highlight_start":21,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":216,"byte_end":255,"line_start":8,"line_end":8,"column_start":48,"column_end":87,"is_primary":true,"text":[{"text":"        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},","highlight_start":48,"highlight_end":87}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":256,"byte_end":281,"line_start":8,"line_end":9,"column_start":88,"column_end":23,"is_primary":true,"text":[{"text":"        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},","highlight_start":88,"highlight_end":89},{"text":"        DictionaryKind,","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `DictionaryConfig`, `DictionaryKind`, `TokenizerConfig`, `UserDictionaryConfig`, `mode::Mode`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:7:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mode::Mode,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        tokenizer::{DictionaryConfig, Tokenizer, TokenizerConfig, UserDictionaryConfig},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        DictionaryKind,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `regex::Regex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":300,"byte_end":312,"line_start":11,"line_end":11,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    use regex::Regex;","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":296,"byte_end":313,"line_start":11,"line_end":11,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    use regex::Regex;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `regex::Regex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:11:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use regex::Regex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variant `END_OF_FILE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":365,"byte_end":376,"line_start":15,"line_end":15,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        END_OF_FILE,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":365,"byte_end":376,"line_start":15,"line_end":15,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        END_OF_FILE,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"EndOfFile","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `END_OF_FILE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        END_OF_FILE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `EndOfFile`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"variant `VERTICAL_BAR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":635,"byte_end":647,"line_start":29,"line_end":29,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        VERTICAL_BAR,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":635,"byte_end":647,"line_start":29,"line_end":29,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        VERTICAL_BAR,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"VerticalBar","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `VERTICAL_BAR` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:29:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        VERTICAL_BAR,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `VerticalBar`\u001b[0m\n\n"}
{"message":"variant `FORWARD_SLASH` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":658,"byte_end":671,"line_start":30,"line_end":30,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        FORWARD_SLASH,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":658,"byte_end":671,"line_start":30,"line_end":30,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        FORWARD_SLASH,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"ForwardSlash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `FORWARD_SLASH` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:30:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        FORWARD_SLASH,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `ForwardSlash`\u001b[0m\n\n"}
{"message":"variant `BACKWARD_SLASH` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":682,"byte_end":696,"line_start":31,"line_end":31,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        BACKWARD_SLASH,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":682,"byte_end":696,"line_start":31,"line_end":31,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        BACKWARD_SLASH,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"BackwardSlash","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `BACKWARD_SLASH` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BACKWARD_SLASH,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `BackwardSlash`\u001b[0m\n\n"}
{"message":"variant `EXCLAMATION_MARK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":707,"byte_end":723,"line_start":32,"line_end":32,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        EXCLAMATION_MARK,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":707,"byte_end":723,"line_start":32,"line_end":32,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        EXCLAMATION_MARK,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"ExclamationMark","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `EXCLAMATION_MARK` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:32:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        EXCLAMATION_MARK,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `ExclamationMark`\u001b[0m\n\n"}
{"message":"variant `FULL_POINT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":736,"byte_end":746,"line_start":34,"line_end":34,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        FULL_POINT,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":736,"byte_end":746,"line_start":34,"line_end":34,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        FULL_POINT,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"FullPoint","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `FULL_POINT` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:34:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        FULL_POINT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `FullPoint`\u001b[0m\n\n"}
{"message":"variant `LESSER_THAN` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":757,"byte_end":768,"line_start":35,"line_end":35,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        LESSER_THAN,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":757,"byte_end":768,"line_start":35,"line_end":35,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        LESSER_THAN,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"LesserThan","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `LESSER_THAN` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:35:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        LESSER_THAN,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `LesserThan`\u001b[0m\n\n"}
{"message":"variant `GREATER_THAN` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":779,"byte_end":791,"line_start":36,"line_end":36,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        GREATER_THAN,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":779,"byte_end":791,"line_start":36,"line_end":36,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        GREATER_THAN,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"GreaterThan","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `GREATER_THAN` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:36:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        GREATER_THAN,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `GreaterThan`\u001b[0m\n\n"}
{"message":"variant `QUESTION_MARK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":802,"byte_end":815,"line_start":37,"line_end":37,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        QUESTION_MARK,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":802,"byte_end":815,"line_start":37,"line_end":37,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        QUESTION_MARK,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"QuestionMark","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `QUESTION_MARK` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:37:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QUESTION_MARK,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `QuestionMark`\u001b[0m\n\n"}
{"message":"variant `LEFT_PARENTHESES` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":959,"byte_end":975,"line_start":48,"line_end":48,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        LEFT_PARENTHESES,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":959,"byte_end":975,"line_start":48,"line_end":48,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        LEFT_PARENTHESES,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"LeftParentheses","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `LEFT_PARENTHESES` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:48:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        LEFT_PARENTHESES,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `LeftParentheses`\u001b[0m\n\n"}
{"message":"variant `LEFT_BRACE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":986,"byte_end":996,"line_start":49,"line_end":49,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        LEFT_BRACE,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":986,"byte_end":996,"line_start":49,"line_end":49,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        LEFT_BRACE,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"LeftBrace","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `LEFT_BRACE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:49:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        LEFT_BRACE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `LeftBrace`\u001b[0m\n\n"}
{"message":"variant `RIGHT_PARENTHESES` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":1007,"byte_end":1024,"line_start":50,"line_end":50,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        RIGHT_PARENTHESES,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":1007,"byte_end":1024,"line_start":50,"line_end":50,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        RIGHT_PARENTHESES,","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"RightParentheses","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `RIGHT_PARENTHESES` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:50:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        RIGHT_PARENTHESES,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `RightParentheses`\u001b[0m\n\n"}
{"message":"variant `RIGHT_BRACE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":1035,"byte_end":1046,"line_start":51,"line_end":51,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        RIGHT_BRACE,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src\\models\\lang\\lex_morpho_ast.rs","byte_start":1035,"byte_end":1046,"line_start":51,"line_end":51,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        RIGHT_BRACE,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"RightBrace","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variant `RIGHT_BRACE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\lang\\lex_morpho_ast.rs:51:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        RIGHT_BRACE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to upper camel case: `RightBrace`\u001b[0m\n\n"}
{"message":"unused imports: `VecDeque`, `option::Option`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\models\\ecd\\buffer_layer_mgr.rs","byte_start":39,"byte_end":47,"line_start":2,"line_end":2,"column_start":28,"column_end":36,"is_primary":true,"text":[{"text":"    collections::{HashMap, VecDeque, hash_map::Keys},","highlight_start":28,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models\\ecd\\buffer_layer_mgr.rs","byte_start":126,"byte_end":140,"line_start":6,"line_end":6,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    option::Option,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\models\\ecd\\buffer_layer_mgr.rs","byte_start":37,"byte_end":47,"line_start":2,"line_end":2,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"    collections::{HashMap, VecDeque, hash_map::Keys},","highlight_start":26,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\models\\ecd\\buffer_layer_mgr.rs","byte_start":119,"byte_end":140,"line_start":5,"line_end":6,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    io::prelude::*,","highlight_start":19,"highlight_end":20},{"text":"    option::Option,","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `VecDeque`, `option::Option`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\ecd\\buffer_layer_mgr.rs:2:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    collections::{HashMap, VecDeque, hash_map::Keys},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    option::Option,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `result`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\ctls\\lang\\lex_morpho_ctl.rs","byte_start":77,"byte_end":83,"line_start":4,"line_end":4,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        result,","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\ctls\\lang\\lex_morpho_ctl.rs","byte_start":66,"byte_end":83,"line_start":3,"line_end":4,"column_start":28,"column_end":15,"is_primary":true,"text":[{"text":"        io::{self, BufRead},","highlight_start":28,"highlight_end":29},{"text":"        result,","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `result`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ctls\\lang\\lex_morpho_ctl.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        result,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `super::Controller`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\ctls\\lang\\lex_morpho_ctl.rs","byte_start":1336,"byte_end":1353,"line_start":55,"line_end":55,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"        use super::Controller;","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\ctls\\lang\\lex_morpho_ctl.rs","byte_start":1332,"byte_end":1354,"line_start":55,"line_end":55,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"        use super::Controller;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `super::Controller`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\ctls\\lang\\lex_morpho_ctl.rs:55:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        use super::Controller;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to previous error; 19 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to previous error; 19 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0433`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0433`.\u001b[0m\n"}
