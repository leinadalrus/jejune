{"message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\shared\\data\\accounts_user_sqli.rs","byte_start":262,"byte_end":270,"line_start":9,"line_end":9,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"        use std::time::{Duration, Instant};","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\shared\\data\\accounts_user_sqli.rs","byte_start":262,"byte_end":272,"line_start":9,"line_end":9,"column_start":25,"column_end":35,"is_primary":true,"text":[{"text":"        use std::time::{Duration, Instant};","highlight_start":25,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\shared\\data\\accounts_user_sqli.rs:9:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        use std::time::{Duration, Instant};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"trait objects must include the `dyn` keyword","code":{"code":"E0782","explanation":"Trait objects must include the `dyn` keyword.\n\nErroneous code example:\n\n```edition2021,compile_fail,E0782\ntrait Foo {}\nfn test(arg: Box<Foo>) {} // error!\n```\n\nTrait objects are a way to call methods on types that are not known until\nruntime but conform to some trait.\n\nTrait objects should be formed with `Box<dyn Foo>`, but in the code above\n`dyn` is left off.\n\nThis makes it harder to see that `arg` is a trait object and not a\nsimply a heap allocated type called `Foo`.\n\nTo fix this issue, add `dyn` before the trait name.\n\n```edition2021\ntrait Foo {}\nfn test(arg: Box<dyn Foo>) {} // ok!\n```\n\nThis used to be allowed before edition 2021, but is now an error.\n"},"level":"error","spans":[{"file_name":"src\\shared\\data\\trading_sys_sqli.rs","byte_start":488,"byte_end":498,"line_start":15,"line_end":15,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"          pub fn orderbook(&self) -> Vec<PartialOrd> {}","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `dyn` keyword before this trait","code":null,"level":"help","spans":[{"file_name":"src\\shared\\data\\trading_sys_sqli.rs","byte_start":488,"byte_end":488,"line_start":15,"line_end":15,"column_start":42,"column_end":42,"is_primary":true,"text":[{"text":"          pub fn orderbook(&self) -> Vec<PartialOrd> {}","highlight_start":42,"highlight_end":42}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\shared\\data\\trading_sys_sqli.rs","byte_start":498,"byte_end":498,"line_start":15,"line_end":15,"column_start":52,"column_end":52,"is_primary":true,"text":[{"text":"          pub fn orderbook(&self) -> Vec<PartialOrd> {}","highlight_start":52,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0782]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trait objects must include the `dyn` keyword\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\shared\\data\\trading_sys_sqli.rs:15:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m          pub fn orderbook(&self) -> Vec<PartialOrd> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add `dyn` keyword before this trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m          pub fn orderbook(&self) -> Vec<\u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mPartialOrd> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"message":"the type parameter `Rhs` must be explicitly specified","code":{"code":"E0393","explanation":"A type parameter which references `Self` in its default value was not specified.\n\nErroneous code example:\n\n```compile_fail,E0393\ntrait A<T=Self> {}\n\nfn together_we_will_rule_the_galaxy(son: &A) {}\n// error: the type parameter `T` must be explicitly specified in an\n//        object type because its default value `Self` references the\n//        type `Self`\n```\n\nA trait object is defined over a single, fully-defined trait. With a regular\ndefault parameter, this parameter can just be substituted in. However, if the\ndefault parameter is `Self`, the trait changes for each concrete type; i.e.\n`i32` will be expected to implement `A<i32>`, `bool` will be expected to\nimplement `A<bool>`, etc... These types will not share an implementation of a\nfully-defined trait; instead they share implementations of a trait with\ndifferent parameters substituted in for each implementation. This is\nirreconcilable with what we need to make a trait object work, and is thus\ndisallowed. Making the trait concrete by explicitly specifying the value of the\ndefaulted parameter will fix this issue. Fixed example:\n\n```\ntrait A<T=Self> {}\n\nfn together_we_will_rule_the_galaxy(son: &A<i32>) {} // Ok!\n```\n"},"level":"error","spans":[{"file_name":"C:\\Users\\danie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\cmp.rs","byte_start":33673,"byte_end":33729,"line_start":1096,"line_end":1096,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"pub trait PartialOrd<Rhs: ?Sized = Self>: PartialEq<Rhs> {","highlight_start":1,"highlight_end":57}],"label":"type parameter `Rhs` must be specified for this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\shared\\data\\trading_sys_sqli.rs","byte_start":488,"byte_end":498,"line_start":15,"line_end":15,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"          pub fn orderbook(&self) -> Vec<PartialOrd> {}","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"because of the default `Self` reference, type parameters must be specified on object types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"set the type parameter to the desired type","code":null,"level":"help","spans":[{"file_name":"src\\shared\\data\\trading_sys_sqli.rs","byte_start":488,"byte_end":498,"line_start":15,"line_end":15,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"          pub fn orderbook(&self) -> Vec<PartialOrd> {}","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":"PartialOrd<Rhs>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0393]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the type parameter `Rhs` must be explicitly specified\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\shared\\data\\trading_sys_sqli.rs:15:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m          pub fn orderbook(&self) -> Vec<PartialOrd> {}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: set the type parameter to the desired type: `PartialOrd<Rhs>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\danie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\cmp.rs:1096:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1096\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PartialOrd<Rhs: ?Sized = Self>: PartialEq<Rhs> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype parameter `Rhs` must be specified for this\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: because of the default `Self` reference, type parameters must be specified on object types\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0393, E0782.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0393, E0782.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0393`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0393`.\u001b[0m\n"}
